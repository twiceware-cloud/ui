{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "https://ui.twiceware.cloud/r/twc-ui/base-button",
    "https://ui.twiceware.cloud/r/twc-ui/tooltip"
  ],
  "files": [
    {
      "path": "twc-ui/button.tsx",
      "type": "registry:ui",
      "target": "~/components/twc-ui/button.tsx",
      "content": "'use client'\n\nimport { Tooltip, TooltipTrigger } from './tooltip'\nimport type { TooltipProps } from 'react-aria-components'\nimport { BaseButton, buttonVariants, type BaseButtonProps } from './base-button'\nimport type { JSX } from 'react'\n\nexport interface ButtonProps extends BaseButtonProps {\n  tooltip?: string\n  tooltipPlacement?: TooltipProps['placement']\n  forceTitle?: boolean\n}\n\nexport const Button = ({\n  tooltip = '',\n  forceTitle = false,\n  title = '',\n  type = 'button',\n  tooltipPlacement = 'bottom',\n  form,\n  variant,\n  size = 'default',\n  children,\n  ...props\n}: ButtonProps): JSX.Element => {\n  const ariaLabel = title || tooltip\n\n  if (variant === 'toolbar-default') {\n    size = 'auto'\n    forceTitle = true\n  }\n\n  if (variant === 'toolbar') {\n    tooltip = title\n    title = ''\n  }\n\n  if (!forceTitle && title && !tooltip && ['icon', 'icon-sm', 'icon-xs'].includes(size as string)) {\n    tooltip = title\n    title = ''\n  }\n\n  if (tooltip) {\n    return (\n      <TooltipTrigger>\n        <BaseButton\n          size={size}\n          title={title}\n          form={form}\n          variant={variant}\n          type={type}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          {title || children}\n        </BaseButton>\n        <Tooltip placement={tooltipPlacement}>{tooltip}</Tooltip>\n      </TooltipTrigger>\n    )\n  }\n\n  return (\n    <BaseButton\n      size={size}\n      title={title}\n      form={form}\n      type={type}\n      variant={variant}\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {title || children}\n    </BaseButton>\n  )\n}\n\nexport { buttonVariants }\n"
    }
  ]
}
