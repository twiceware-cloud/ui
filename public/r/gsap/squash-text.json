{
  "name": "squash-text",
  "type": "registry:ui",
  "dependencies": ["gsap", "@gsap/react"],
  "files": [
    {
      "path": "gsap/squash-text.tsx",
      "type": "registry:ui",
      "target": "~/components/gsap/squash-text.tsx",
      "content": "'use client'\n\nimport { type ComponentProps, useId, useRef } from 'react'\n\nimport { useGSAP } from '@gsap/react'\nimport gsap from 'gsap'\nimport { CustomBounce } from 'gsap/CustomBounce'\nimport { CustomEase } from 'gsap/CustomEase'\nimport { SplitText } from 'gsap/SplitText'\n\ngsap.registerPlugin(CustomEase, CustomBounce, SplitText)\n\ntype SquashTextProps = {\n  repeat?: boolean | number\n} & ComponentProps<'div'>\n\nexport const SquashText = ({ repeat = true, ...props }: SquashTextProps) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null)\n  const bounceId = useId()\n  const squashEase = `squash-${bounceId}`\n  const bounceEase = `bounce-${bounceId}`\n\n  useGSAP(\n    () => {\n      if (!wrapperRef.current) return\n\n      CustomBounce.create(bounceEase, {\n        strength: 0.6,\n        squash: 1,\n        squashID: squashEase\n      })\n\n      const splitText = new SplitText(wrapperRef.current).chars\n\n      gsap\n        .timeline({\n          defaults: { duration: 1.5, stagger: { amount: 0.1, ease: 'sine.in' } },\n          repeat: repeat === true ? -1 : repeat === false ? 0 : repeat\n        })\n        .from(\n          splitText,\n          {\n            duration: 0.6,\n            opacity: 0,\n            ease: 'power1.inOut'\n          },\n          0\n        )\n        .from(\n          splitText,\n          {\n            y: -100,\n            ease: bounceEase\n          },\n          0\n        )\n        .to(\n          splitText,\n          {\n            scaleX: 1.5,\n            scaleY: 0.8,\n            rotate: () => 15 - 30 * Math.random(),\n            ease: squashEase,\n            transformOrigin: '50% 100%'\n          },\n          0\n        )\n    },\n    { scope: wrapperRef }\n  )\n\n  return <div {...props} ref={wrapperRef} />\n}\n"
    }
  ]
}
