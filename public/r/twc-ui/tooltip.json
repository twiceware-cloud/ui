{
  "name": "tooltip",
  "type": "registry:ui",
  "dependencies": ["react-aria-components"],
  "files": [
    {
      "path": "twc-ui/tooltip.tsx",
      "type": "registry:ui",
      "target": "components/twc-ui/tooltip.tsx",
      "content": "'use client'\n\nimport type React from 'react'\nimport {\n  composeRenderProps,\n  OverlayArrow,\n  Tooltip as AriaTooltip,\n  type TooltipProps as AriaTooltipProps,\n  TooltipTrigger\n} from 'react-aria-components'\nimport { tv } from 'tailwind-variants'\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, 'children'> {\n  children: React.ReactNode\n}\n\nconst styles = tv({\n  base: 'group rounded-md bg-foreground px-3 py-1.5 text-sm text-white will-change-transform',\n  variants: {\n    isEntering: {\n      true: 'fade-in animate-in duration-200'\n    },\n    isExiting: {\n      true: 'fade-out animate-out duration-150'\n    }\n  }\n})\n\nexport function Tooltip({ children, ...props }: TooltipProps) {\n  return (\n    <AriaTooltip\n      {...props}\n      offset={8}\n      className={composeRenderProps(props.className, (className, renderProps) =>\n        styles({\n          ...renderProps,\n          className\n        })\n      )}\n    >\n      <OverlayArrow>\n        <svg\n          width={8}\n          height={8}\n          data-placement={props.placement}\n          viewBox=\"0 0 8 8\"\n          className=\"data-[placement=left]:-rotate-90 fill-bg-foreground stroke-primary data-[placement=bottom]:rotate-180 data-[placement=right]:rotate-90 forced-colors:fill-[Canvas]\"\n        >\n          <title>Tooltip-Arrow</title>\n          <path d=\"M0 0 L4 4 L8 0\" />\n        </svg>\n      </OverlayArrow>\n      {children}\n    </AriaTooltip>\n  )\n}\n\nexport { TooltipTrigger }\n"
    }
  ]
}
